#pragma once

#include "ServicesTestClass.h"

namespace PlayFab
{
namespace Test
{

class AccountManagementTests : public ServicesTestClass
{
public:
    using ServicesTestClass::ServicesTestClass;

private:
    void AddTests() override;

    AsyncOp<void> Initialize() override;
    AsyncOp<void> Uninitialize() override;

    SharedPtr<struct AccountManagementTestsState> m_state;

private:
    // Autogenerated tests
#if 0
    void TestClientAddOrUpdateContactEmail(TestContext& testContext);
#endif
#if 0
    void TestClientAddUsernamePassword(TestContext& testContext);
#endif
    void TestClientGetAccountInfo(TestContext& testContext);
    void TestClientGetPlayerCombinedInfo(TestContext& testContext);
    void TestClientGetPlayerProfile(TestContext& testContext);
#if 0
    void TestClientGetPlayFabIDsFromFacebookIDs(TestContext& testContext);
#endif
#if 0
    void TestClientGetPlayFabIDsFromFacebookInstantGamesIds(TestContext& testContext);
#endif
#if 0
    void TestClientGetPlayFabIDsFromGameCenterIDs(TestContext& testContext);
#endif
#if 0
    void TestClientGetPlayFabIDsFromGoogleIDs(TestContext& testContext);
#endif
#if 0
    void TestClientGetPlayFabIDsFromGooglePlayGamesPlayerIDs(TestContext& testContext);
#endif
#if 0
    void TestClientGetPlayFabIDsFromKongregateIDs(TestContext& testContext);
#endif
#if HC_PLATFORM == HC_PLATFORM_NINTENDO_SWITCH
    void TestClientGetPlayFabIDsFromNintendoServiceAccountIds(TestContext& testContext);
#endif
#if 0
    void TestClientGetPlayFabIDsFromNintendoSwitchDeviceIds(TestContext& testContext);
#endif
#if HC_PLATFORM == HC_PLATFORM_SONY_PLAYSTATION_4 || HC_PLATFORM == HC_PLATFORM_SONY_PLAYSTATION_5
    void TestClientGetPlayFabIDsFromPSNAccountIDs(TestContext& testContext);
#endif
#if HC_PLATFORM == HC_PLATFORM_WIN32
    void TestClientGetPlayFabIDsFromSteamIDs(TestContext& testContext);
#endif
#if 0
    void TestClientGetPlayFabIDsFromTwitchIDs(TestContext& testContext);
#endif
#if HC_PLATFORM == HC_PLATFORM_WIN32 || HC_PLATFORM == HC_PLATFORM_GDK
    void TestClientGetPlayFabIDsFromXboxLiveIDs(TestContext& testContext);
#endif
#if 0
    void TestClientLinkAndroidDeviceID(TestContext& testContext);
#endif
#if 0
    void TestClientLinkApple(TestContext& testContext);
#endif
    void TestClientLinkCustomID(TestContext& testContext);
#if 0
    void TestClientLinkFacebookAccount(TestContext& testContext);
#endif
#if 0
    void TestClientLinkFacebookInstantGamesId(TestContext& testContext);
#endif
#if 0
    void TestClientLinkGameCenterAccount(TestContext& testContext);
#endif
#if 0
    void TestClientLinkGoogleAccount(TestContext& testContext);
#endif
#if 0
    void TestClientLinkGooglePlayGamesServicesAccount(TestContext& testContext);
#endif
#if 0
    void TestClientLinkIOSDeviceID(TestContext& testContext);
#endif
#if 0
    void TestClientLinkKongregate(TestContext& testContext);
#endif
#if HC_PLATFORM == HC_PLATFORM_NINTENDO_SWITCH
    void TestClientLinkNintendoServiceAccount(TestContext& testContext);
#endif
#if 0
    void TestClientLinkNintendoSwitchDeviceId(TestContext& testContext);
#endif
    void TestClientLinkOpenIdConnect(TestContext& testContext);
#if HC_PLATFORM == HC_PLATFORM_SONY_PLAYSTATION_4 || HC_PLATFORM == HC_PLATFORM_SONY_PLAYSTATION_5
    void TestClientLinkPSNAccount(TestContext& testContext);
#endif
#if HC_PLATFORM == HC_PLATFORM_WIN32
    void TestClientLinkSteamAccount(TestContext& testContext);
#endif
#if 0
    void TestClientLinkTwitch(TestContext& testContext);
#endif
#if HC_PLATFORM == HC_PLATFORM_WIN32 || HC_PLATFORM == HC_PLATFORM_GDK
    void TestClientLinkXboxAccount(TestContext& testContext);
#endif
#if 0
    void TestClientRemoveContactEmail(TestContext& testContext);
#endif
    void TestClientReportPlayer(TestContext& testContext);
#if 0
    void TestClientSendAccountRecoveryEmail(TestContext& testContext);
#endif
#if 0
    void TestClientUnlinkAndroidDeviceID(TestContext& testContext);
#endif
#if 0
    void TestClientUnlinkApple(TestContext& testContext);
#endif
    void TestClientUnlinkCustomID(TestContext& testContext);
#if 0
    void TestClientUnlinkFacebookAccount(TestContext& testContext);
#endif
#if 0
    void TestClientUnlinkFacebookInstantGamesId(TestContext& testContext);
#endif
#if 0
    void TestClientUnlinkGameCenterAccount(TestContext& testContext);
#endif
#if 0
    void TestClientUnlinkGoogleAccount(TestContext& testContext);
#endif
#if 0
    void TestClientUnlinkGooglePlayGamesServicesAccount(TestContext& testContext);
#endif
#if 0
    void TestClientUnlinkIOSDeviceID(TestContext& testContext);
#endif
#if 0
    void TestClientUnlinkKongregate(TestContext& testContext);
#endif
#if HC_PLATFORM == HC_PLATFORM_NINTENDO_SWITCH
    void TestClientUnlinkNintendoServiceAccount(TestContext& testContext);
#endif
#if 0
    void TestClientUnlinkNintendoSwitchDeviceId(TestContext& testContext);
#endif
    void TestClientUnlinkOpenIdConnect(TestContext& testContext);
#if HC_PLATFORM == HC_PLATFORM_SONY_PLAYSTATION_4 || HC_PLATFORM == HC_PLATFORM_SONY_PLAYSTATION_5
    void TestClientUnlinkPSNAccount(TestContext& testContext);
#endif
#if HC_PLATFORM == HC_PLATFORM_WIN32
    void TestClientUnlinkSteamAccount(TestContext& testContext);
#endif
#if 0
    void TestClientUnlinkTwitch(TestContext& testContext);
#endif
#if HC_PLATFORM == HC_PLATFORM_WIN32 || HC_PLATFORM == HC_PLATFORM_GDK
    void TestClientUnlinkXboxAccount(TestContext& testContext);
#endif
    void TestClientUpdateAvatarUrl(TestContext& testContext);
#if 0
    void TestClientUpdateUserTitleDisplayName(TestContext& testContext);
#endif
#if 0
    void TestServerBanUsers(TestContext& testContext);
#endif
#if 0
    void TestServerDeletePlayer(TestContext& testContext);
#endif
#if 0
    void TestServerGetPlayerCombinedInfo(TestContext& testContext);
#endif
#if 0
    void TestServerGetPlayerProfile(TestContext& testContext);
#endif
#if 0
    void TestServerGetPlayFabIDsFromFacebookIDs(TestContext& testContext);
#endif
#if 0
    void TestServerGetPlayFabIDsFromFacebookInstantGamesIds(TestContext& testContext);
#endif
#if 0
    void TestServerGetPlayFabIDsFromNintendoServiceAccountIds(TestContext& testContext);
#endif
#if 0
    void TestServerGetPlayFabIDsFromNintendoSwitchDeviceIds(TestContext& testContext);
#endif
#if 0
    void TestServerGetPlayFabIDsFromPSNAccountIDs(TestContext& testContext);
#endif
#if 0
    void TestServerGetPlayFabIDsFromSteamIDs(TestContext& testContext);
#endif
#if 0
    void TestServerGetPlayFabIDsFromTwitchIDs(TestContext& testContext);
#endif
#if 0
    void TestServerGetPlayFabIDsFromXboxLiveIDs(TestContext& testContext);
#endif
#if 0
    void TestServerGetServerCustomIDsFromPlayFabIDs(TestContext& testContext);
#endif
#if 0
    void TestServerGetUserAccountInfo(TestContext& testContext);
#endif
#if 0
    void TestServerGetUserBans(TestContext& testContext);
#endif
#if 0
    void TestServerLinkNintendoServiceAccount(TestContext& testContext);
#endif
#if 0
    void TestServerLinkNintendoSwitchDeviceId(TestContext& testContext);
#endif
#if 0
    void TestServerLinkPSNAccount(TestContext& testContext);
#endif
#if 0
    void TestServerLinkPSNId(TestContext& testContext);
#endif
#if 0
    void TestServerLinkServerCustomId(TestContext& testContext);
#endif
#if 0
    void TestServerLinkSteamId(TestContext& testContext);
#endif
#if 0
    void TestServerLinkXboxAccount(TestContext& testContext);
#endif
#if 0
    void TestServerRevokeAllBansForUser(TestContext& testContext);
#endif
#if 0
    void TestServerRevokeBans(TestContext& testContext);
#endif
#if 0
    void TestServerSendCustomAccountRecoveryEmail(TestContext& testContext);
#endif
#if 0
    void TestServerSendEmailFromTemplate(TestContext& testContext);
#endif
#if 0
    void TestServerUnlinkNintendoServiceAccount(TestContext& testContext);
#endif
#if 0
    void TestServerUnlinkNintendoSwitchDeviceId(TestContext& testContext);
#endif
#if 0
    void TestServerUnlinkPSNAccount(TestContext& testContext);
#endif
#if 0
    void TestServerUnlinkServerCustomId(TestContext& testContext);
#endif
#if 0
    void TestServerUnlinkSteamId(TestContext& testContext);
#endif
#if 0
    void TestServerUnlinkXboxAccount(TestContext& testContext);
#endif
#if 0
    void TestServerUpdateAvatarUrl(TestContext& testContext);
#endif
#if 0
    void TestServerUpdateBans(TestContext& testContext);
#endif
#if 0
    void TestGetTitlePlayersFromXboxLiveIDs(TestContext& testContext);
#endif

};

} // namespace Test
} // namespace PlayFab
