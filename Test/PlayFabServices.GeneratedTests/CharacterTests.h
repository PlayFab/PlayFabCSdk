#pragma once

#include "ServicesTestClass.h"

namespace PlayFab
{
namespace Test
{

class CharacterTests : public ServicesTestClass
{
public:
    using ServicesTestClass::ServicesTestClass;

private:
    void AddTests() override;

    AsyncOp<void> Initialize() override;
    AsyncOp<void> Uninitialize() override;

    SharedPtr<struct CharacterTestsState> m_state;

private:
    // Autogenerated tests
#if 0
    void TestClientGetAllUsersCharacters(TestContext& testContext);
#endif
#if 0
    void TestClientGetCharacterData(TestContext& testContext);
#endif
#if 0
    void TestClientGetCharacterReadOnlyData(TestContext& testContext);
#endif
#if 0
    void TestClientGrantCharacterToUser(TestContext& testContext);
#endif
#if 0
    void TestClientUpdateCharacterData(TestContext& testContext);
#endif
#if 0
    void TestServerDeleteCharacterFromUser(TestContext& testContext);
#endif
#if 0
    void TestServerGetAllUsersCharacters(TestContext& testContext);
#endif
#if 0
    void TestServerGetCharacterData(TestContext& testContext);
#endif
#if 0
    void TestServerGetCharacterInternalData(TestContext& testContext);
#endif
#if 0
    void TestServerGetCharacterReadOnlyData(TestContext& testContext);
#endif
#if 0
    void TestServerGrantCharacterToUser(TestContext& testContext);
#endif
#if 0
    void TestServerUpdateCharacterData(TestContext& testContext);
#endif
#if 0
    void TestServerUpdateCharacterInternalData(TestContext& testContext);
#endif
#if 0
    void TestServerUpdateCharacterReadOnlyData(TestContext& testContext);
#endif

};

} // namespace Test
} // namespace PlayFab
