#pragma once

#include "ServicesTestClass.h"

namespace PlayFab
{
namespace Test
{

class StatisticsTests : public ServicesTestClass
{
public:
    using ServicesTestClass::ServicesTestClass;

private:
    void AddTests() override;

    AsyncOp<void> Initialize() override;
    AsyncOp<void> Uninitialize() override;

    SharedPtr<struct StatisticsTestsState> m_state;

private:
    // Autogenerated tests
#if HC_PLATFORM == HC_PLATFORM_WIN32 || HC_PLATFORM == HC_PLATFORM_LINUX || HC_PLATFORM == HC_PLATFORM_MAC
    void TestCreateStatisticDefinition(TestContext& testContext);
#endif
#if HC_PLATFORM == HC_PLATFORM_WIN32 || HC_PLATFORM == HC_PLATFORM_LINUX || HC_PLATFORM == HC_PLATFORM_MAC
    void TestDeleteStatisticDefinition(TestContext& testContext);
#endif
    void TestDeleteStatistics(TestContext& testContext);
#if HC_PLATFORM == HC_PLATFORM_WIN32 || HC_PLATFORM == HC_PLATFORM_LINUX || HC_PLATFORM == HC_PLATFORM_MAC
    void TestGetStatisticDefinition(TestContext& testContext);
#endif
    void TestGetStatistics(TestContext& testContext);
#if HC_PLATFORM == HC_PLATFORM_WIN32 || HC_PLATFORM == HC_PLATFORM_LINUX || HC_PLATFORM == HC_PLATFORM_MAC
    void TestGetStatisticsForEntities(TestContext& testContext);
#endif
#if HC_PLATFORM == HC_PLATFORM_WIN32 || HC_PLATFORM == HC_PLATFORM_LINUX || HC_PLATFORM == HC_PLATFORM_MAC
    void TestIncrementStatisticVersion(TestContext& testContext);
#endif
#if HC_PLATFORM == HC_PLATFORM_WIN32 || HC_PLATFORM == HC_PLATFORM_LINUX || HC_PLATFORM == HC_PLATFORM_MAC
    void TestListStatisticDefinitions(TestContext& testContext);
#endif
    void TestUpdateStatistics(TestContext& testContext);

};

} // namespace Test
} // namespace PlayFab
