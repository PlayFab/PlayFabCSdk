#pragma once

#include "ServicesTestClass.h"

namespace PlayFab
{
namespace Test
{

class SegmentsTests : public ServicesTestClass
{
public:
    using ServicesTestClass::ServicesTestClass;

private:
    void AddTests() override;

    AsyncOp<void> Initialize() override;
    AsyncOp<void> Uninitialize() override;

    SharedPtr<struct SegmentsTestsState> m_state;

private:
    // Autogenerated tests
    void TestClientGetPlayerSegments(TestContext& testContext);
    void TestClientGetPlayerTags(TestContext& testContext);
#if HC_PLATFORM == HC_PLATFORM_WIN32 || HC_PLATFORM == HC_PLATFORM_LINUX
    void TestServerAddPlayerTag(TestContext& testContext);
#endif
#if HC_PLATFORM == HC_PLATFORM_WIN32 || HC_PLATFORM == HC_PLATFORM_LINUX
    void TestServerGetAllSegments(TestContext& testContext);
#endif
#if HC_PLATFORM == HC_PLATFORM_WIN32 || HC_PLATFORM == HC_PLATFORM_LINUX
    void TestServerGetPlayerSegments(TestContext& testContext);
#endif
#if HC_PLATFORM == HC_PLATFORM_WIN32 || HC_PLATFORM == HC_PLATFORM_LINUX
    void TestServerGetPlayersInSegment(TestContext& testContext);
#endif
#if HC_PLATFORM == HC_PLATFORM_WIN32 || HC_PLATFORM == HC_PLATFORM_LINUX
    void TestServerGetPlayerTags(TestContext& testContext);
#endif
#if HC_PLATFORM == HC_PLATFORM_WIN32 || HC_PLATFORM == HC_PLATFORM_LINUX
    void TestServerRemovePlayerTag(TestContext& testContext);
#endif

};

} // namespace Test
} // namespace PlayFab
