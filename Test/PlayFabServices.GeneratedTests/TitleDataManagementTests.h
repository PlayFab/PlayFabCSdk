#pragma once

#include "ServicesTestClass.h"

namespace PlayFab
{
namespace Test
{

class TitleDataManagementTests : public ServicesTestClass
{
public:
    using ServicesTestClass::ServicesTestClass;

private:
    void AddTests() override;

    AsyncOp<void> Initialize() override;
    AsyncOp<void> Uninitialize() override;

    SharedPtr<struct TitleDataManagementTestsState> m_state;

private:
    // Autogenerated tests
    void TestClientGetPublisherData(TestContext& testContext);
    void TestClientGetTime(TestContext& testContext);
    void TestClientGetTitleData(TestContext& testContext);
    void TestClientGetTitleNews(TestContext& testContext);
#if HC_PLATFORM == HC_PLATFORM_WIN32
    void TestServerGetPublisherData(TestContext& testContext);
#endif
#if HC_PLATFORM == HC_PLATFORM_WIN32
    void TestServerGetTime(TestContext& testContext);
#endif
#if HC_PLATFORM == HC_PLATFORM_WIN32
    void TestServerGetTitleData(TestContext& testContext);
#endif
#if HC_PLATFORM == HC_PLATFORM_WIN32
    void TestServerGetTitleInternalData(TestContext& testContext);
#endif
#if HC_PLATFORM == HC_PLATFORM_WIN32
    void TestServerGetTitleNews(TestContext& testContext);
#endif
#if HC_PLATFORM == HC_PLATFORM_WIN32
    void TestServerSetPublisherData(TestContext& testContext);
#endif
#if HC_PLATFORM == HC_PLATFORM_WIN32
    void TestServerSetTitleData(TestContext& testContext);
#endif
#if HC_PLATFORM == HC_PLATFORM_WIN32
    void TestServerSetTitleInternalData(TestContext& testContext);
#endif

};

} // namespace Test
} // namespace PlayFab
